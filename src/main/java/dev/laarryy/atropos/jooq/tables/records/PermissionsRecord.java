/*
 * This file is generated by jOOQ.
 */
package dev.laarryy.atropos.jooq.tables.records;


import dev.laarryy.atropos.jooq.tables.Permissions;

import org.checkerframework.checker.nullness.qual.NonNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionsRecord extends UpdatableRecordImpl<PermissionsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    public PermissionsRecord setId(@NonNull Integer value) {
        set(0, value);
        return this;
    }

    @NonNull
    public Integer getId() {
        return (Integer) get(0);
    }

    public PermissionsRecord setPermission(@NonNull String value) {
        set(1, value);
        return this;
    }

    @NonNull
    public String getPermission() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NonNull
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NonNull
    public Field<Integer> field1() {
        return Permissions.PERMISSIONS.ID;
    }

    @Override
    @NonNull
    public Field<String> field2() {
        return Permissions.PERMISSIONS.PERMISSION;
    }

    @Override
    @NonNull
    public Integer component1() {
        return getId();
    }

    @Override
    @NonNull
    public String component2() {
        return getPermission();
    }

    @Override
    @NonNull
    public Integer value1() {
        return getId();
    }

    @Override
    @NonNull
    public String value2() {
        return getPermission();
    }

    @Override
    @NonNull
    public PermissionsRecord value1(@NonNull Integer value) {
        setId(value);
        return this;
    }

    @Override
    @NonNull
    public PermissionsRecord value2(@NonNull String value) {
        setPermission(value);
        return this;
    }

    @Override
    @NonNull
    public PermissionsRecord values(@NonNull Integer value1, @NonNull String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PermissionsRecord() {
        super(Permissions.PERMISSIONS);
    }

    public PermissionsRecord(@NonNull Integer id, @NonNull String permission) {
        super(Permissions.PERMISSIONS);

        setId(id);
        setPermission(permission);
    }
}
