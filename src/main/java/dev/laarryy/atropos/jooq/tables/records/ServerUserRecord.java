/*
 * This file is generated by jOOQ.
 */
package dev.laarryy.atropos.jooq.tables.records;


import dev.laarryy.atropos.jooq.tables.ServerUser;

import org.checkerframework.checker.nullness.qual.NonNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.Instant;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServerUserRecord extends UpdatableRecordImpl<ServerUserRecord> implements Record4<Integer, Integer, Integer, Instant> {

    private static final long serialVersionUID = 1L;

    public ServerUserRecord setId(@NonNull Integer value) {
        set(0, value);
        return this;
    }

    @NonNull
    public Integer getId() {
        return (Integer) get(0);
    }

    public ServerUserRecord setUserId(@NonNull Integer value) {
        set(1, value);
        return this;
    }

    @NonNull
    public Integer getUserId() {
        return (Integer) get(1);
    }

    public ServerUserRecord setServerId(@NonNull Integer value) {
        set(2, value);
        return this;
    }

    @NonNull
    public Integer getServerId() {
        return (Integer) get(2);
    }

    public ServerUserRecord setDate(@NonNull Instant value) {
        set(3, value);
        return this;
    }

    @NonNull
    public Instant getDate() {
        return (Instant) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Row4<Integer, Integer, Integer, Instant> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NonNull
    public Row4<Integer, Integer, Integer, Instant> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NonNull
    public Field<Integer> field1() {
        return ServerUser.SERVER_USER.ID;
    }

    @Override
    @NonNull
    public Field<Integer> field2() {
        return ServerUser.SERVER_USER.USER_ID;
    }

    @Override
    @NonNull
    public Field<Integer> field3() {
        return ServerUser.SERVER_USER.SERVER_ID;
    }

    @Override
    @NonNull
    public Field<Instant> field4() {
        return ServerUser.SERVER_USER.DATE;
    }

    @Override
    @NonNull
    public Integer component1() {
        return getId();
    }

    @Override
    @NonNull
    public Integer component2() {
        return getUserId();
    }

    @Override
    @NonNull
    public Integer component3() {
        return getServerId();
    }

    @Override
    @NonNull
    public Instant component4() {
        return getDate();
    }

    @Override
    @NonNull
    public Integer value1() {
        return getId();
    }

    @Override
    @NonNull
    public Integer value2() {
        return getUserId();
    }

    @Override
    @NonNull
    public Integer value3() {
        return getServerId();
    }

    @Override
    @NonNull
    public Instant value4() {
        return getDate();
    }

    @Override
    @NonNull
    public ServerUserRecord value1(@NonNull Integer value) {
        setId(value);
        return this;
    }

    @Override
    @NonNull
    public ServerUserRecord value2(@NonNull Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    @NonNull
    public ServerUserRecord value3(@NonNull Integer value) {
        setServerId(value);
        return this;
    }

    @Override
    @NonNull
    public ServerUserRecord value4(@NonNull Instant value) {
        setDate(value);
        return this;
    }

    @Override
    @NonNull
    public ServerUserRecord values(@NonNull Integer value1, @NonNull Integer value2, @NonNull Integer value3, @NonNull Instant value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ServerUserRecord() {
        super(ServerUser.SERVER_USER);
    }

    public ServerUserRecord(@NonNull Integer id, @NonNull Integer userId, @NonNull Integer serverId, @NonNull Instant date) {
        super(ServerUser.SERVER_USER);

        setId(id);
        setUserId(userId);
        setServerId(serverId);
        setDate(date);
    }
}
