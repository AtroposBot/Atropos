/*
 * This file is generated by jOOQ.
 */
package dev.laarryy.atropos.jooq.tables.records;


import dev.laarryy.atropos.jooq.tables.ServerBlacklist;

import org.checkerframework.checker.nullness.qual.NonNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServerBlacklistRecord extends UpdatableRecordImpl<ServerBlacklistRecord> implements Record5<Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    public ServerBlacklistRecord setId(@NonNull Integer value) {
        set(0, value);
        return this;
    }

    @NonNull
    public Integer getId() {
        return (Integer) get(0);
    }

    public ServerBlacklistRecord setServerId(@NonNull Integer value) {
        set(1, value);
        return this;
    }

    @NonNull
    public Integer getServerId() {
        return (Integer) get(1);
    }

    public ServerBlacklistRecord setRegexTrigger(@NonNull String value) {
        set(2, value);
        return this;
    }

    @NonNull
    public String getRegexTrigger() {
        return (String) get(2);
    }

    public ServerBlacklistRecord setType(@NonNull String value) {
        set(3, value);
        return this;
    }

    @NonNull
    public String getType() {
        return (String) get(3);
    }

    public ServerBlacklistRecord setAction(@NonNull String value) {
        set(4, value);
        return this;
    }

    @NonNull
    public String getAction() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Row5<Integer, Integer, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NonNull
    public Row5<Integer, Integer, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NonNull
    public Field<Integer> field1() {
        return ServerBlacklist.SERVER_BLACKLIST.ID;
    }

    @Override
    @NonNull
    public Field<Integer> field2() {
        return ServerBlacklist.SERVER_BLACKLIST.SERVER_ID;
    }

    @Override
    @NonNull
    public Field<String> field3() {
        return ServerBlacklist.SERVER_BLACKLIST.REGEX_TRIGGER;
    }

    @Override
    @NonNull
    public Field<String> field4() {
        return ServerBlacklist.SERVER_BLACKLIST.TYPE;
    }

    @Override
    @NonNull
    public Field<String> field5() {
        return ServerBlacklist.SERVER_BLACKLIST.ACTION;
    }

    @Override
    @NonNull
    public Integer component1() {
        return getId();
    }

    @Override
    @NonNull
    public Integer component2() {
        return getServerId();
    }

    @Override
    @NonNull
    public String component3() {
        return getRegexTrigger();
    }

    @Override
    @NonNull
    public String component4() {
        return getType();
    }

    @Override
    @NonNull
    public String component5() {
        return getAction();
    }

    @Override
    @NonNull
    public Integer value1() {
        return getId();
    }

    @Override
    @NonNull
    public Integer value2() {
        return getServerId();
    }

    @Override
    @NonNull
    public String value3() {
        return getRegexTrigger();
    }

    @Override
    @NonNull
    public String value4() {
        return getType();
    }

    @Override
    @NonNull
    public String value5() {
        return getAction();
    }

    @Override
    @NonNull
    public ServerBlacklistRecord value1(@NonNull Integer value) {
        setId(value);
        return this;
    }

    @Override
    @NonNull
    public ServerBlacklistRecord value2(@NonNull Integer value) {
        setServerId(value);
        return this;
    }

    @Override
    @NonNull
    public ServerBlacklistRecord value3(@NonNull String value) {
        setRegexTrigger(value);
        return this;
    }

    @Override
    @NonNull
    public ServerBlacklistRecord value4(@NonNull String value) {
        setType(value);
        return this;
    }

    @Override
    @NonNull
    public ServerBlacklistRecord value5(@NonNull String value) {
        setAction(value);
        return this;
    }

    @Override
    @NonNull
    public ServerBlacklistRecord values(@NonNull Integer value1, @NonNull Integer value2, @NonNull String value3, @NonNull String value4, @NonNull String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ServerBlacklistRecord() {
        super(ServerBlacklist.SERVER_BLACKLIST);
    }

    public ServerBlacklistRecord(@NonNull Integer id, @NonNull Integer serverId, @NonNull String regexTrigger, @NonNull String type, @NonNull String action) {
        super(ServerBlacklist.SERVER_BLACKLIST);

        setId(id);
        setServerId(serverId);
        setRegexTrigger(regexTrigger);
        setType(type);
        setAction(action);
    }
}
